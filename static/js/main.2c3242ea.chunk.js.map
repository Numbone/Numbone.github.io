{"version":3,"sources":["components/UI/MyModal/MyModal.module.css","components/UI/button/MyButton.module.css","components/UI/input/MyInput.module.css","components/UI/Loader/Loader.module.css","components/UI/button/MyButton.jsx","context/index.js","components/UI/Navbar/Navbar.jsx","pages/About.jsx","API/PostService.js","hooks/usePosts.js","hooks/useFetching.js","utils/pages.js","components/UI/input/MyInput.jsx","components/PostForm.jsx","components/UI/MyModal/MyModal.jsx","components/UI/select/MySelect.jsx","components/PostFilter.jsx","components/PostItem.jsx","components/PostList.jsx","components/UI/Loader/Loader.jsx","components/UI/pagination/Pagination.jsx","pages/Posts.jsx","router/index.js","hooks/useObserver.js","pages/PostIdPage.jsx","pages/Login.jsx","components/AppRouter.jsx","App.js","index.js"],"names":["module","exports","MyButton","children","props","className","classes","myBtn","AuthContext","createContext","Navbar","useContext","setIsAuth","isAuth","onClick","localStorage","removeItem","to","About","cite","href","PostService","limit","page","axios","get","params","_limit","_page","response","id","usePosts","posts","sort","query","sortedPosts","useMemo","a","b","localeCompare","useSortedPosts","filter","post","title","toLowerCase","includes","useFetching","callback","useState","isLoading","setIsLoading","error","setError","message","getPageCount","totalCount","Math","ceil","MyInput","React","forwardRef","ref","myInput","PostForm","create","body","setPost","value","onChange","e","target","type","placeholder","preventDefault","newPost","Date","now","MyModal","visible","setVisible","rootClasses","cl","myModal","push","active","join","myModalContent","stopPropagation","MySelect","options","defaultValue","event","disabled","map","option","name","PostFilter","setFilter","selectedSort","PostItem","router","useHistory","remove","PostList","length","style","textAlign","TransitionGroup","index","CSSTransition","timeout","classNames","number","Loader","loader","Pagination","totalPages","changePage","pagesArray","result","i","getPagesArray","p","Posts","privateRoutes","path","component","exact","setPosts","modal","setModal","setTotalPages","setLimit","setPage","sortedAndSearchedPosts","lastElement","useRef","getAll","data","headers","fetchPosts","isPostsLoading","postError","canLoad","observer","useEffect","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","useObserver","marginTop","margin","height","background","display","justifyContent","useParams","comments","setComments","getById","fetchPostById","getCommentsByPostId","fetchComments","isComLoading","comm","email","publicRoutes","onSubmit","setItem","AppRouter","console","log","route","App","setLoading","getItem","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c3242ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__3Hf8U\",\"myModalContent\":\"MyModal_myModalContent__3m1RW\",\"active\":\"MyModal_active__9Tljb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButton_myBtn__2Tc-C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"MyInput_myInput__2fGxc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__28v_p\",\"rotate\":\"Loader_rotate__M94AG\"};","import React from 'react';\nimport classes from './MyButton.module.css';\n\nconst MyButton = ({children, ...props}) => {\n    return (\n        <button {...props} className={classes.myBtn}>\n            {children}\n        </button>\n    );\n};\n\nexport default MyButton;\n","import {createContext} from 'react'\n\nexport const AuthContext = createContext(null);\n","import React, {useContext} from 'react';\nimport {Link} from \"react-router-dom\";\nimport MyButton from \"../button/MyButton\";\nimport {AuthContext} from \"../../../context\";\n\nconst Navbar = () => {\n    const {isAuth, setIsAuth} = useContext(AuthContext);\n\n    const logout = () => {\n        setIsAuth(false);\n        localStorage.removeItem('auth')\n    }\n\n    return (\n        <div className=\"navbar\">\n            <MyButton onClick={logout}>\n                Выйти\n            </MyButton>\n            <div className=\"navbar__links\">\n                <Link to=\"/about\">О сайте</Link>\n                <Link to=\"/posts\">Посты</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst About = () => {\n    return (\n        <h1>\n            <header>\n                <h1>This is a motherfucking website.</h1>\n                <aside>And it's fucking perfect.</aside>\n            </header>\n\n            <h2>Seriously, what the fuck else do you want?</h2>\n\n            <p>You probably build websites and think your shit is special. You think your 13 megabyte parallax-ative home page is going to get you some fucking Awwward banner you can glue to the top corner of your site. You think your 40-pound jQuery file and 83 polyfills give IE7 a boner because it finally has box-shadow. Wrong, motherfucker. Let me describe your perfect-ass website:</p>\n\n            <ul>\n                <li>Shit's lightweight and loads fast</li>\n                <li>Fits on all your shitty screens</li>\n                <li>Looks the same in all your shitty browsers</li>\n                <li>The motherfucker's accessible to every asshole that visits your site</li>\n                <li>Shit's legible and gets your fucking point across (if you had one instead of just 5mb pics of hipsters drinking coffee)</li>\n            </ul>\n\n            <h3>Well guess what, motherfucker:</h3>\n\n            <p>You. Are. Over-designing. Look at this shit. It's a motherfucking website. Why the fuck do you need to animate a fucking trendy-ass banner flag when I hover over that useless piece of shit? You spent hours on it and added 80 kilobytes to your fucking site, and some motherfucker jabbing at it on their iPad with fat sausage fingers will never see that shit. Not to mention blind people will never see that shit, but they don't see any of your shitty shit.</p>\n\n            <p>You never knew it, but this is your perfect website. Here's why.</p>\n\n            <h2>It's fucking lightweight</h2>\n\n            <p>This entire page weighs less than the gradient-meshed facebook logo on your fucking Wordpress site. Did you seriously load 100kb of jQuery UI just so you could animate the fucking background color of a div? You loaded all 7 fontfaces of a shitty webfont just so you could say \"Hi.\" at 100px height at the beginning of your site? You piece of shit.</p>\n\n            <h2>It's responsive</h2>\n\n            <p>You dumbass. You thought you needed media queries to be responsive, but no. Responsive means that it responds to whatever motherfucking screensize it's viewed on. This site doesn't care if you're on an iMac or a motherfucking Tamagotchi.</p>\n\n            <h2>It fucking works</h2>\n\n            <p>Look at this shit. You can read it ... that is, if you can read, motherfucker. It makes sense. It has motherfucking hierarchy. It's using HTML5 tags so you and your bitch-ass browser know what the fuck's in this fucking site. That's semantics, motherfucker.</p>\n\n            <p>It has content on the fucking screen. Your site has three bylines and link to your dribbble account, but you spread it over 7 full screens and make me click some bobbing button to show me how cool the jQuery ScrollTo plugin is.</p>\n\n            <p>Cross-browser compatibility? Load this motherfucker in IE6. I fucking dare you.</p>\n\n            <h2>This is a website. Look at it.  You've never seen one before.</h2>\n\n            <p>Like the man who's never grown out his beard has no idea what his true natural state is, you have no fucking idea what a website is. All you have ever seen are shitty skeuomorphic bastardizations of what should be text communicating a fucking message. This is a real, naked website. Look at it. It's fucking beautiful.</p>\n\n            <h3>Yes, this is fucking satire, you fuck</h3>\n\n            <p>I'm not actually saying your shitty site should look like this. What I'm saying is that all the problems we have with websites are <strong>ones we create ourselves</strong>. Websites aren't broken by default, they are functional, high-performing, and accessible. You break them. You son-of-a-bitch.</p>\n\n            <blockquote cite=\"https://www.vitsoe.com/us/about/good-design\">\"Good design is as little design as possible.\"\n                - some German motherfucker\n            </blockquote>\n\n\n\n            <h2>Epilogue</h2>\n            <p>From the philosophies expressed (poorly) above, <a href=\"http://txti.es\">txti</a> was created. You should try it today to make your own motherfucking websites.</p>\n        </h1>\n    );\n};\n\nexport default About;\n","import axios from \"axios\";\n\nexport default class PostService {\n    static async getAll(limit = 10, page = 1) {\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n            params: {\n                _limit: limit,\n                _page: page\n            }\n        })\n        return response;\n    }\n\n    static async getById(id) {\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts/' + id)\n        return response;\n    }\n\n    static async getCommentsByPostId(id) {\n        const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`)\n        return response;\n    }\n}\n","import {useMemo} from \"react\";\n\nexport const useSortedPosts = (posts, sort) => {\n    const sortedPosts = useMemo(() => {\n        if(sort) {\n            return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]))\n        }\n        return posts;\n    }, [sort, posts])\n\n    return sortedPosts;\n}\n\nexport const usePosts = (posts, sort, query) => {\n    const sortedPosts = useSortedPosts(posts, sort);\n\n    const sortedAndSearchedPosts = useMemo(() => {\n        return sortedPosts.filter(post => post.title.toLowerCase().includes(query.toLowerCase()))\n    }, [query, sortedPosts])\n\n    return sortedAndSearchedPosts;\n}\n","import {useState} from \"react\";\n\nexport const useFetching = (callback) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const fetching = async (...args) => {\n        try {\n            setIsLoading(true)\n            await callback(...args)\n        } catch (e) {\n            setError(e.message);\n        } finally {\n            setIsLoading(false)\n        }\n    }\n\n    return [fetching, isLoading, error]\n}\n","export const getPageCount = (totalCount, limit) => {\n    return Math.ceil(totalCount / limit)\n}\n\nexport const getPagesArray = (totalPages) => {\n    let result = [];\n    for (let i = 0; i < totalPages; i++) {\n        result.push(i + 1)\n    }\n    return result;\n}\n","import React from 'react';\nimport classes from './MyInput.module.css';\n\nconst MyInput = React.forwardRef((props, ref) => {\n    return (\n        <input ref={ref} className={classes.myInput} {...props}/>\n    );\n});\n\nexport default MyInput;\n","import React, {useState} from 'react';\nimport MyInput from \"./UI/input/MyInput\";\nimport MyButton from \"./UI/button/MyButton\";\n\nconst PostForm = ({create}) => {\n    const [post, setPost] = useState({title: '', body: ''})\n\n\n    const addNewPost = (e) => {\n        e.preventDefault()\n        const newPost = {\n            ...post, id: Date.now()\n        }\n        create(newPost)\n        setPost({title: '', body: ''})\n    }\n\n    return (\n        <form>\n            {/*Управляемый компонент*/}\n            <MyInput\n                value={post.title}\n                onChange={e => setPost({...post, title: e.target.value})}\n                type=\"text\"\n                placeholder=\"Название поста\"\n            />\n            {/*Неуправляемый\\Неконтролируемый компонент*/}\n            <MyInput\n                value={post.body}\n                onChange={e => setPost({...post, body: e.target.value})}\n                type=\"text\"\n                placeholder=\"Описание поста\"\n            />\n            <MyButton onClick={addNewPost}>Создать пост</MyButton>\n        </form>\n    );\n};\n\nexport default PostForm;\n","import React from 'react';\nimport cl from './MyModal.module.css';\n\nconst MyModal = ({children, visible, setVisible}) => {\n\n    const rootClasses = [cl.myModal]\n\n    if (visible) {\n        rootClasses.push(cl.active);\n    }\n\n    return (\n        <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\n            <div className={cl.myModalContent} onClick={(e) => e.stopPropagation()}>\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default MyModal;\n","import React from 'react';\n\nconst MySelect = ({options, defaultValue, value, onChange}) => {\n    return (\n        <select\n            value={value}\n            onChange={event => onChange(event.target.value)}\n        >\n            <option disabled value=\"\">{defaultValue}</option>\n            {options.map(option =>\n                <option key={option.value} value={option.value}>\n                    {option.name}\n                </option>\n            )}\n        </select>\n    );\n};\n\nexport default MySelect;\n","import React from 'react';\nimport MyInput from \"./UI/input/MyInput\";\nimport MySelect from \"./UI/select/MySelect\";\n\nconst PostFilter = ({filter, setFilter}) => {\n    return (\n        <div>\n            <MyInput\n                value={filter.query}\n                onChange={e => setFilter({...filter, query: e.target.value})}\n                placeholder=\"Поиск...\"\n            />\n            <MySelect\n                value={filter.sort}\n                onChange={selectedSort => setFilter({...filter, sort: selectedSort})}\n                defaultValue=\"Сортировка\"\n                options={[\n                    {value: 'title', name: 'По названию'},\n                    {value: 'body', name: 'По описанию'},\n                ]}\n            />\n        </div>\n    );\n};\n\nexport default PostFilter;\n","import React from 'react';\nimport MyButton from \"./UI/button/MyButton\";\nimport {useHistory} from 'react-router-dom';\n\nconst PostItem = (props) => {\n    const router = useHistory()\n\n    return (\n        <div className=\"post\">\n            <div className=\"post__content\">\n                <strong>{props.post.id}. {props.post.title}</strong>\n                <div>\n                    {props.post.body}\n                </div>\n            </div>\n            <div className=\"post__btns\">\n                <MyButton onClick={() => router.push(`/posts/${props.post.id}`)}>\n                    Открыть\n                </MyButton>\n                <MyButton onClick={() => props.remove(props.post)}>\n                    Удалить\n                </MyButton>\n            </div>\n        </div>\n    );\n};\n\nexport default PostItem;\n","import React from 'react';\nimport PostItem from \"./PostItem\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\n\nconst PostList = ({posts, title, remove}) => {\n\n    if (!posts.length) {\n        return (\n            <h1 style={{textAlign: 'center'}}>\n                Посты не найдены!\n            </h1>\n        )\n    }\n\n    return (\n        <div>\n            <h1 style={{textAlign: 'center'}}>\n                {title}\n            </h1>\n            <TransitionGroup>\n                {posts.map((post, index) =>\n                    <CSSTransition\n                        key={post.id}\n                        timeout={500}\n                        classNames=\"post\"\n                    >\n                        <PostItem remove={remove} number={index + 1} post={post} />\n                    </CSSTransition>\n                )}\n            </TransitionGroup>\n        </div>\n    );\n};\n\nexport default PostList;\n","import React from 'react';\nimport cl from './Loader.module.css';\n\nconst Loader = () => {\n    return (\n        <div className={cl.loader}>\n\n        </div>\n    );\n};\n\nexport default Loader;\n","import React from 'react';\nimport {getPagesArray} from \"../../../utils/pages\";\n\nconst Pagination = ({totalPages, page, changePage}) => {\n    let pagesArray = getPagesArray(totalPages);\n    return (\n        <div className=\"page__wrapper\">\n            {pagesArray.map(p =>\n                <span\n                    onClick={() => changePage(p)}\n                    key={p}\n                    className={page === p ? 'page page__current' : 'page'}\n                >\n                        {p}\n                    </span>\n            )}\n        </div>\n    );\n};\n\nexport default Pagination;\n","import React, {useEffect, useRef, useState} from 'react';\nimport PostService from \"../API/PostService\";\nimport {usePosts} from \"../hooks/usePosts\";\nimport {useFetching} from \"../hooks/useFetching\";\nimport {getPageCount} from \"../utils/pages\";\nimport MyButton from \"../components/UI/button/MyButton\";\nimport PostForm from \"../components/PostForm\";\nimport MyModal from \"../components/UI/MyModal/MyModal\";\nimport PostFilter from \"../components/PostFilter\";\nimport PostList from \"../components/PostList\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport Pagination from \"../components/UI/pagination/Pagination\";\nimport {useObserver} from \"../hooks/useObserver\";\nimport MySelect from \"../components/UI/select/MySelect\";\n\n\nfunction Posts() {\n    const [posts, setPosts] = useState([])\n    const [filter, setFilter] = useState({sort: '', query: ''})\n    const [modal, setModal] = useState(false);\n    const [totalPages, setTotalPages] = useState(0);\n    const [limit, setLimit] = useState(10);\n    const [page, setPage] = useState(1);\n    const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n    const lastElement = useRef()\n\n    const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\n        const response = await PostService.getAll(limit, page);\n        setPosts([...posts, ...response.data])\n        const totalCount = response.headers['x-total-count']\n        setTotalPages(getPageCount(totalCount, limit));\n    })\n\n    useObserver(lastElement, page < totalPages, isPostsLoading, () => {\n        setPage(page + 1);\n    })\n\n    useEffect(() => {\n        fetchPosts(limit, page)\n    }, [page, limit])\n\n    const createPost = (newPost) => {\n        setPosts([...posts, newPost])\n        setModal(false)\n    }\n\n    // Получаем post из дочернего компонента\n    const removePost = (post) => {\n        setPosts(posts.filter(p => p.id !== post.id))\n    }\n\n    const changePage = (page) => {\n        setPage(page)\n    }\n\n    return (\n        <div className=\"App\">\n            <MyButton style={{marginTop: 30}} onClick={() => setModal(true)}>\n                Создать пользователя\n            </MyButton>\n            <MyModal visible={modal} setVisible={setModal}>\n                <PostForm create={createPost}/>\n            </MyModal>\n            <hr style={{margin: '15px 0'}}/>\n            <PostFilter\n                filter={filter}\n                setFilter={setFilter}\n            />\n            <MySelect\n                value={limit}\n                onChange={value => setLimit(value)}\n                defaultValue=\"Кол-во элементов на странице\"\n                options={[\n                    {value: 5, name: '5'},\n                    {value: 10, name: '10'},\n                    {value: 25, name: '25'},\n                    {value: -1, name: 'Показать все'},\n                ]}\n            />\n            {postError &&\n            <h1>Произошла ошибка ${postError}</h1>\n            }\n            <PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"Посты про JS\"/>\n            <div ref={lastElement} style={{height: 20, background: 'red'}}/>\n            {isPostsLoading &&\n            <div style={{display: 'flex', justifyContent: 'center', marginTop: 50}}><Loader/></div>\n            }\n            <Pagination\n                page={page}\n                changePage={changePage}\n                totalPages={totalPages}\n            />\n        </div>\n    );\n}\n\nexport default Posts;\n","import About from \"../pages/About\";\nimport Posts from \"../pages/Posts\";\nimport PostIdPage from \"../pages/PostIdPage\";\nimport Login from \"../pages/Login\";\n\n\nexport const privateRoutes = [\n    {path: '/about', component: About, exact: true},\n    {path: '/posts', component: Posts, exact: true},\n    {path: '/posts/:id', component: PostIdPage, exact: true},\n]\n\nexport const publicRoutes = [\n    {path: '/login', component: Login, exact: true},\n]\n","import {useEffect, useRef} from \"react\";\n\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\n    const observer = useRef();\n\n    useEffect(() => {\n        if(isLoading) return;\n        if(observer.current) observer.current.disconnect();\n\n        var cb = function(entries, observer) {\n            if (entries[0].isIntersecting && canLoad) {\n                callback()\n            }\n        };\n        observer.current = new IntersectionObserver(cb);\n        observer.current.observe(ref.current)\n    }, [isLoading])\n}\n","import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {useFetching} from \"../hooks/useFetching\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/Loader/Loader\";\n\nconst PostIdPage = () => {\n    const params = useParams()\n    const [post, setPost] = useState({});\n    const [comments, setComments] = useState([]);\n    const [fetchPostById, isLoading, error] = useFetching(async (id) => {\n        const response = await PostService.getById(id)\n        setPost(response.data);\n    })\n    const [fetchComments, isComLoading, comError] = useFetching(async (id) => {\n        const response = await PostService.getCommentsByPostId(id)\n        setComments(response.data);\n    })\n\n    useEffect(() => {\n        fetchPostById(params.id)\n        fetchComments(params.id)\n    }, [])\n\n    return (\n        <div>\n            <h1>Вы открыли страницу поста c ID = {params.id}</h1>\n            {isLoading\n                ? <Loader/>\n                :  <div>{post.id}. {post.title}</div>\n            }\n            <h1>\n                Комментарии\n            </h1>\n            {isComLoading\n                ? <Loader/>\n                : <div>\n                    {comments.map(comm =>\n                        <div key={comm.id} style={{marginTop: 15}}>\n                            <h5>{comm.email}</h5>\n                            <div>{comm.body}</div>\n                        </div>\n                    )}\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default PostIdPage;\n","import React, {useContext} from 'react';\nimport MyInput from \"../components/UI/input/MyInput\";\nimport MyButton from \"../components/UI/button/MyButton\";\nimport {AuthContext} from \"../context\";\n\nconst Login = () => {\n    const {isAuth, setIsAuth} = useContext(AuthContext);\n\n    const login = event => {\n        event.preventDefault();\n        setIsAuth(true);\n        localStorage.setItem('auth', 'true')\n    }\n\n    return (\n        <div>\n            <h1>Страница для логина</h1>\n            <form onSubmit={login}>\n                <MyInput type=\"text\" placeholder=\"Введите логин\"/>\n                <MyInput type=\"password\" placeholder=\"Введите пароль\"/>\n                <MyButton>Войти</MyButton>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;\n","import React, {useContext} from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport {privateRoutes, publicRoutes} from \"../router\";\nimport {AuthContext} from \"../context\";\nimport Loader from \"./UI/Loader/Loader\";\n\nconst AppRouter = () => {\n    const {isAuth, isLoading} = useContext(AuthContext);\n    console.log(isAuth)\n\n    if (isLoading) {\n        return <Loader/>\n    }\n\n    return (\n        isAuth\n            ?\n            <Switch>\n                {privateRoutes.map(route =>\n                    <Route\n                        component={route.component}\n                        path={route.path}\n                        exact={route.exact}\n                        key={route.path}\n                    />\n                )}\n                <Redirect to='/posts'/>\n            </Switch>\n            :\n            <Switch>\n                {publicRoutes.map(route =>\n                    <Route\n                        component={route.component}\n                        path={route.path}\n                        exact={route.exact}\n                        key={route.path}\n                    />\n                )}\n                <Redirect to='/login'/>\n            </Switch>\n    );\n};\n\nexport default AppRouter;\n","import React, {useEffect, useState} from 'react';\nimport './styles/App.css';\nimport {BrowserRouter} from \"react-router-dom\";\nimport Navbar from \"./components/UI/Navbar/Navbar\";\nimport AppRouter from \"./components/AppRouter\";\nimport {AuthContext} from \"./context\";\n\nfunction App() {\n    const [isAuth, setIsAuth] = useState(false);\n    const [isLoading, setLoading] = useState(true);\n\n    useEffect(() => {\n        if (localStorage.getItem('auth')) {\n            setIsAuth(true)\n        }\n        setLoading(false);\n    }, [])\n\n    return (\n        <AuthContext.Provider value={{\n            isAuth,\n            setIsAuth,\n            isLoading\n        }}>\n            <BrowserRouter>\n                <Navbar/>\n                <AppRouter/>\n            </BrowserRouter>\n        </AuthContext.Provider>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}